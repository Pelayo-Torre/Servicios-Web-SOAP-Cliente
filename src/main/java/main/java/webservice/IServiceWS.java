
package main.java.webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IServiceWS", targetNamespace = "http://services.web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IServiceWS {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ServiceException_Exception
     * @throws HotelException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addService", targetNamespace = "http://services.web/", className = "main.java.webservice.AddService")
    @ResponseWrapper(localName = "addServiceResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.AddServiceResponse")
    @Action(input = "http://services.web/IServiceWS/addServiceRequest", output = "http://services.web/IServiceWS/addServiceResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://services.web/IServiceWS/addService/Fault/ServiceException"),
        @FaultAction(className = HotelException_Exception.class, value = "http://services.web/IServiceWS/addService/Fault/HotelException")
    })
    public String addService(
        @WebParam(name = "arg0", targetNamespace = "")
        ServiceAddDTO arg0)
        throws HotelException_Exception, ServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteService", targetNamespace = "http://services.web/", className = "main.java.webservice.DeleteService")
    @ResponseWrapper(localName = "deleteServiceResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.DeleteServiceResponse")
    @Action(input = "http://services.web/IServiceWS/deleteServiceRequest", output = "http://services.web/IServiceWS/deleteServiceResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://services.web/IServiceWS/deleteService/Fault/ServiceException")
    })
    public String deleteService(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns main.java.webservice.ServiceDTO
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listService", targetNamespace = "http://services.web/", className = "main.java.webservice.ListService")
    @ResponseWrapper(localName = "listServiceResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.ListServiceResponse")
    @Action(input = "http://services.web/IServiceWS/listServiceRequest", output = "http://services.web/IServiceWS/listServiceResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://services.web/IServiceWS/listService/Fault/ServiceException")
    })
    public ServiceDTO listService(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateService", targetNamespace = "http://services.web/", className = "main.java.webservice.UpdateService")
    @ResponseWrapper(localName = "updateServiceResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.UpdateServiceResponse")
    @Action(input = "http://services.web/IServiceWS/updateServiceRequest", output = "http://services.web/IServiceWS/updateServiceResponse", fault = {
        @FaultAction(className = ServiceException_Exception.class, value = "http://services.web/IServiceWS/updateService/Fault/ServiceException")
    })
    public String updateService(
        @WebParam(name = "arg0", targetNamespace = "")
        ServiceDTO arg0)
        throws ServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<main.java.webservice.ServiceDTO>
     * @throws HotelException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listServicesOfHotel", targetNamespace = "http://services.web/", className = "main.java.webservice.ListServicesOfHotel")
    @ResponseWrapper(localName = "listServicesOfHotelResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.ListServicesOfHotelResponse")
    @Action(input = "http://services.web/IServiceWS/listServicesOfHotelRequest", output = "http://services.web/IServiceWS/listServicesOfHotelResponse", fault = {
        @FaultAction(className = HotelException_Exception.class, value = "http://services.web/IServiceWS/listServicesOfHotel/Fault/HotelException")
    })
    public List<ServiceDTO> listServicesOfHotel(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws HotelException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<main.java.webservice.ServiceDTO>
     * @throws BookingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listServicesOfBooking", targetNamespace = "http://services.web/", className = "main.java.webservice.ListServicesOfBooking")
    @ResponseWrapper(localName = "listServicesOfBookingResponse", targetNamespace = "http://services.web/", className = "main.java.webservice.ListServicesOfBookingResponse")
    @Action(input = "http://services.web/IServiceWS/listServicesOfBookingRequest", output = "http://services.web/IServiceWS/listServicesOfBookingResponse", fault = {
        @FaultAction(className = BookingException_Exception.class, value = "http://services.web/IServiceWS/listServicesOfBooking/Fault/BookingException")
    })
    public List<ServiceDTO> listServicesOfBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws BookingException_Exception
    ;

}
